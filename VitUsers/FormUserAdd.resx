<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAC
        CQAAAk1TRnQBSQFMAgEBAgEAATABAAEwAQABGAEAARgBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFg
        AwABGAMAAQEBAAEgBgABJP8A/wD/ALkAAwgBC/wAAxsBJgFgAZgBLwH5VAADNwFbAxoB+BwAAzAB8QMQ
        ARX0AAMPARQBWwFeAVgBxAFrAcwBKAH/A1EBoEwAAxsBJgFUAVYBVwHCAlcBWQG/AwgBCxQAA0gBhQEd
        AUIB7gH/AwwB+/MAAQEBXQFkAVYB0gFrAcwBKAH/AWsBzAEoAf8BWQFcAVYBvkgAAz0BagFUAVYBVwHC
        AR0BQgHvAf8BHQFCAe8B/wMYAfkUAAFSAVQBVgHSAR0BQgHvAf8BVwFYAWABzQMLAQ/sAAFfAYwBPQHz
        AWsBzAEoAf8BawHMASgB/wFrAcwBKAH/AWsBzAEoAf8BXgFsAVQB3UQAAwYB/AEjAUgB4QH+AR0BQgHv
        Af8BHQFCAe8B/wExAUUBwgH4A1EBoQwAA1ABngEdAUIB7wH/AR0BQgHvAf8DSQHh7AABYQF4AU8B5gFr
        AcwBKAH/AWsBzAEoAf8BYgGjATUB9gFrAcwBKAH/AWsBzAEoAf8BXgFuAVUB2QMhATBEAANRAdUBMgFI
        Aa8B9gEdAUIB7wH/AR0BQgHvAf8CVgFZAcIDHQEqBAADBQEHAlcBWQHEAR0BQgHvAf8DVQHOAwIBA+gA
        AVgBWQFWAbsBagGwAToB+QFrAcwBKAH/AWsBzAEoAf8BYAGCAUYB7gFbAWABWAHIAWsBzAEoAf8BawHM
        ASgB/wFdAWkBVgHXSAADUAHbASMBRwHgAf4BHQFCAe8B/wEdAUIB7wH/A1IB1gQAAxoB+AEdAUIB7wH/
        AlcBXAHFAyQBNegAAVwBbgFRAd8BZQGcAT8B9AFrAcwBKAH/AWsBzAEoAf8BXQFhAVcBygQAAVwBZgFX
        AdEBawHMASgB/wFrAcwBKAH/AWsBzAEoAf8BYAGLAUMB8UgAAysB8gEdAUIB7wH/AR0BQgHvAf8BHQFC
        Ae8B/wMAAf4BIwFIAeEB/gFAAVEBowHxA0wBk+wAAVwBYgFYAckBawHMASgB/wFrAcwBKAH/AVsBYwFY
        AcsDJgE4CAABWwFeAVgBxAFrAcwBKAH/AWsBzAEoAf8BYQG3AS4B+wFcAWEBWAHMSAACOQE8AewBHQFC
        Ae8B/wEdAUIB7wH/AR0BQgHvAf8BHQFCAe8B/wNAAenwAAFeAWcBVwHVAWsBzAEoAf8BZAGFAUoB6gJA
        AT8BbgwAAk0BTAGRAWsBzAEoAf8BawHMASgB/wFrAcwBKAH/AWcBmwFEAfICWAFVAbxEAAMMARACVgFZ
        AcMBHQFCAe8B/wEdAUIB7wH/AlYBWgHCAxABFvAAAVkBXgFXAccBbQGrATkB9wFZAVsBVgG+FAABXwF0
        AVEB4wFrAcwBKAH/AWsBzAEoAf8BawHMASgB/wFmAZMBQwHwAVsBXgFYAcREAAJAAUEB6AEdAUIB7wH/
        AR0BQgHvAf8BHQFCAe8B/wFFAkYB5fAAAxsBJgJHAUYBgRgAAyUBNwFfAXMBUQHfAWsBzAEoAf8BawHM
        ASgB/wFrAcwBKAH/AWoBsAE5AfkBYAGDAUIB7zwAA0AB6AEdAUIB7wH/AR0BQgHvAf8BHQFCAe8B/wEd
        AUIB7wH/AR0BQgHvAf8DRQHl/wARAAFeAWcBVwHVAWsBzAEoAf8BawHMASgB/wFrAcwBKAH/AWsBzAEo
        Af8BawHMASgB/wFeAXkBUAHlAwYBCDAAA0oBigEyAUMBrQH1AR0BQgHvAf8DVgHMAVUBVgFbAcYBHQFC
        Ae8B/wEdAUIB7wH/AUABUgGmAfEDTwGb/wARAAFfAXQBUQHjAWsBzAEoAf8BawHMASgB/wFrAcwBKAH/
        AWsBzAEoAf8BawHMASgB/wFaAa4BIQH/LAADHAEoAlYBWwHHAR0BQgHvAf8BJwFNAcwB+gNDAXgDUQHV
        AR0BQgHvAf8BHQFCAe8B/wEdAUIB7wH/AVgBWQFgAcgDJwE7/wANAAMSARkBWAFbAVYBwQFrAcwBKAH/
        AWsBzAEoAf8BawHMASgB/wFgAWoBWAHUAwkBDCsAAQECVAFVAdUBHQFCAe8B/wEdAUIB7wH/Aj4BPwHr
        CAACVgFXAcUBHQFCAe8B/wEdAUIB7wH/AR0BQgHvAf8CVAFWAcIDBQEH/wANAAM7AWQBXwFxAVYB2wFr
        AcwBKAH/AWsBzAEoAf8BXgFpAVUB2SwAAx0B9wEdAUIB7wH/AR0BQgHvAf8BUQFZAXkB4AMoATwIAANT
        Aa8BHQFCAe8B/wEdAUIB7wH/AR0BQgHvAf8DVgG7Aw4BE/8AEQADRAF5AV4BbAFWAdgBawHMASgB/wFW
        AVcBVQGzKAADQQHnAR0BQgHvAf8BHQFCAe8B/wEdAUIB7wH/AxgB+RAAAlYBWQHDAR0BQgHvAf8BRAFR
        AZUB7QNGAYH/ABkAAykBPwFhAXMBUAHiAwQBBSgAAk0BUQHcAR0BQgHvAf8BHQFCAe8B/wFVAVYBWgHB
        Aw4BExAAA0UB5gEdAUIB7wH/Ax0B9/8AVAABAQMcAfYBSQFVAYUB6ANMAeAUAAMPARQDVgHMAwYBCP8A
        WQADLAFEAwMBBBgAA1UBwP8A/wD/AN8AAUIBTQE+BwABPgMAASgDAAFgAwABGAMAAQEBAAEBBQABIAEB
        FgAD/wEABv8GAAb/BgAF/wG/BgAB/wGfAv8BPwGfBgAB/wEPAf8B/gIfBgAB/gEPAf8B/AEfAQ8GAAH+
        AQcB/wH8AQ4BHwYAAfwBAwH/Af4BBAEfBgAB+AEDAv8BBAE/BgAB8AFBAv8BgAF/BgAB8AFgAv8BwAH/
        BgAB8AHgAX8B/wHAAf8GAAHxAfABPwH/AeAB/wYAAfMB8AEfAf8BwAF/BgAB/wH4AQcB/wGAAT8GAAH/
        AfwBBwH/AQABHwYAAf8B/AEHAf4BDAEPBgAB/wH+AQ8B/gEMAQ8GAAL/AQ8B/AEeAR8GAAL/AY8B/AEe
        AT8GAAP/AfwBPgE/BgAE/wE/AX8GAAb/BgAG/wYACw==
</value>
  </data>
</root>