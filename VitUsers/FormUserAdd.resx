<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADq
        CAAAAk1TRnQBSQFMAgEBAgEAATgBAAE4AQABGAEAARgBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFg
        AwABGAMAAQEBAAEgBgABJP8A/wD/ALkAAwgBC/wAAxsBJgFgAZQBMQH5VAADNwFbAx0B+BwAAzQB8QMQ
        ARX0AAMPARQCWwFZAcQBagHMAScB/wNRAaBMAAMbASYBVgJXAcICVwFZAb8DCAELFAADSAGFARwBQQHu
        Af8DDgH78wABAQFdAWEBWAHSAWoBzAEnAf8BagHMAScB/wFZAVsBVgG+SAADPQFqAVYCVwHCARwBQQHv
        Af8BHAFBAe8B/wMaAfkUAAJWAVgB0gEcAUEB7wH/AVgBWQFdAc0DCwEP7AABXwGHAT8B8wFqAcwBJwH/
        AWoBzAEnAf8BagHMAScB/wFqAcwBJwH/AV4BaQFXAd1EAAMHAfwBIwFIAd8B/gEcAUEB7wH/ARwBQQHv
        Af8BNAFFAb0B+ANRAaEMAANQAZ4BHAFBAe8B/wEcAUEB7wH/A04B4ewAAWEBcwFRAeYBagHMAScB/wFq
        AcwBJwH/AWIBnQE2AfYBagHMAScB/wFqAcwBJwH/AV4BaQFWAdkDIQEwRAADVQHVATMBSAGqAfYBHAFB
        Ae8B/wEcAUEB7wH/AlcBWQHCAx0BKgQAAwUBBwJYAVkBxAEcAUEB7wH/A1gBzgMCAQPoAAJYAVYBuwFq
        Aa0BPAH5AWoBzAEnAf8BagHMAScB/wFgAX0BSAHuAVsBXgFZAcgBagHMAScB/wFqAcwBJwH/AV0BZgFZ
        AddIAANUAdsBIwFHAd4B/gEcAUEB7wH/ARwBQQHvAf8DVgHWBAADHQH4ARwBQQHvAf8CVwFaAcUDJAE1
        6AABXAFpAVQB3wFlAZYBQAH0AWoBzAEnAf8BagHMAScB/wFdAV8BWQHKBAABXAFjAVgB0QFqAcwBJwH/
        AWoBzAEnAf8BagHMAScB/wFgAYYBRQHxSAADMQHyARwBQQHvAf8BHAFBAe8B/wEcAUEB7wH/AwAB/gEj
        AUgB3wH+AUMBUwGcAfEDTAGT7AABXAFfAVkByQFqAcwBJwH/AWoBzAEnAf8BWwFgAVgBywMmATgIAAJb
        AVkBxAFqAcwBJwH/AWoBzAEnAf8BXwGzAS4B+wFcAV8BWQHMSAACPwFCAewBHAFBAe8B/wEcAUEB7wH/
        ARwBQQHvAf8BHAFBAe8B/wNFAenwAAFeAWMBWQHVAWoBzAEnAf8BYwF/AU0B6gJAAT8BbgwAAk0BTAGR
        AWoBzAEnAf8BagHMAScB/wFqAcwBJwH/AWcBlQFHAfICWAFWAbxEAAMMARACWAFZAcMBHAFBAe8B/wEc
        AUEB7wH/AlcBWQHCAxABFvAAAVkBXAFYAccBbQGnAToB9wFZAVoBVgG+FAABXwFuAVMB4wFqAcwBJwH/
        AWoBzAEnAf8BagHMAScB/wFlAYwBRQHwAlsBWQHERAACRAFFAegBHAFBAe8B/wEcAUEB7wH/ARwBQQHv
        Af8BSwJMAeXwAAMbASYCRwFGAYEYAAMlATcBXgFuAVQB3wFqAcwBJwH/AWoBzAEnAf8BagHMAScB/wFq
        Aa0BOwH5AWABfwFGAe88AANEAegBHAFBAe8B/wEcAUEB7wH/ARwBQQHvAf8BHAFBAe8B/wEcAUEB7wH/
        A0sB5f8AEQABXgFjAVkB1QFqAcwBJwH/AWoBzAEnAf8BagHMAScB/wFqAcwBJwH/AWoBzAEnAf8BXgF2
        AVQB5QMGAQgwAANKAYoBNAFDAaYB9QEcAUEB7wH/A1gBzAFWAVgBWwHGARwBQQHvAf8BHAFBAe8B/wFD
        AVMBoAHxA08Bm/8AEQABXwFuAVMB4wFqAcwBJwH/AWoBzAEnAf8BagHMAScB/wFqAcwBJwH/AWoBzAEn
        Af8BWQGuASAB/ywAAxwBKAJXAVoBxwEcAUEB7wH/ASgBTQHHAfoDQwF4A1UB1QEcAUEB7wH/ARwBQQHv
        Af8BHAFBAe8B/wFZAVoBXgHIAycBO/8ADQADEgEZAVgBWgFWAcEBagHMAScB/wFqAcwBJwH/AWoBzAEn
        Af8BYAFlAVkB1AMJAQwrAAEBAlYBVwHVARwBQQHvAf8BHAFBAe8B/wNDAesIAANXAcUBHAFBAe8B/wEc
        AUEB7wH/ARwBQQHvAf8CVgFXAcIDBQEH/wANAAM7AWQBXwFrAVgB2wFqAcwBJwH/AWoBzAEnAf8BXgFl
        AVYB2SwAAyAB9wEcAUEB7wH/ARwBQQHvAf8BVAFaAXMB4AMoATwIAANUAa8BHAFBAe8B/wEcAUEB7wH/
        ARwBQQHvAf8DVgG7Aw4BE/8AEQADRAF5AV4BZwFYAdgBagHMAScB/wNWAbMoAANHAecBHAFBAe8B/wEc
        AUEB7wH/ARwBQQHvAf8DGgH5EAACWAFZAcMBHAFBAe8B/wFHAVIBjgHtA0YBgf8AGQADKQE/AWEBbwFT
        AeIDBAEFKAACUQFVAdwBHAFBAe8B/wEcAUEB7wH/AlYBWAHBAw4BExAAA0kB5gEcAUEB7wH/AyAB9/8A
        VAABAQMfAfYBTQFWAX4B6ANRAeAUAAMPARQDWAHMAwYBCP8AWQADLAFEAwMBBBgAA1cBwP8A/wD/AN8A
        AUIBTQE+BwABPgMAASgDAAFgAwABGAMAAQEBAAEBBQABIAEBFgAD/wEABv8GAAb/BgAF/wG/BgAB/wGf
        Av8BPwGfBgAB/wEPAf8B/gIfBgAB/gEPAf8B/AEfAQ8GAAH+AQcB/wH8AQ4BHwYAAfwBAwH/Af4BBAEf
        BgAB+AEDAv8BBAE/BgAB8AFBAv8BgAF/BgAB8AFgAv8BwAH/BgAB8AHgAX8B/wHAAf8GAAHxAfABPwH/
        AeAB/wYAAfMB8AEfAf8BwAF/BgAB/wH4AQcB/wGAAT8GAAH/AfwBBwH/AQABHwYAAf8B/AEHAf4BDAEP
        BgAB/wH+AQ8B/gEMAQ8GAAL/AQ8B/AEeAR8GAAL/AY8B/AEeAT8GAAP/AfwBPgE/BgAE/wE/AX8GAAb/
        BgAG/wYACw==
</value>
  </data>
</root>