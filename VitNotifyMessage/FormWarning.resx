<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsEAAA7BAbiRa+0AAASSSURBVHhe7ZxdiFRlHMb3xh3aRHMrlV3wa1ct/ECEtltT
        vOzCK280lSKhyKs0WAi01AvbFCokECQRldavSEjU1d296SKCLoQkMoQuwgs1C4QCmel9tv/CcObZOXM+
        3jNnznl+8INlzvmf877PziwPM+x0CSGEEEIIIYQQQgghhBBC5JHqRPfy6kTlgvOR6X7uXm6HhU+qNysD
        1cnKn7XJSq1ePIZjdprwRXWy+1Yw/GlxzE4TPnB/Zraw4OvFOXa6SJPqd10V9wy/y0KvF+fgXBsTaeGe
        2ftY4Eyca2MiDapjzy5wTecvFjYT52LGxkVS3DP6BAu6mZixcZGE2visda5iPmUhN3Nqxs3aZURcmtXO
        MFVLE4JKyYKNIq5hlxNRaLV2hqlaGhNUSRZoHHEtu6xohai1M0zV0oigQrIgk4hr2uVFM+LWzjBVS1sk
        Se0MU7U0BFRGFlya4h52O1FPWrUzTNXSGUBVZIH5EPey2woQpXYOb11b277hVepHb6ymM0FVSwOgIrKg
        mB+7kFn48NDOVXSGiXva7ctN1Np5eNcqGj789O2X6QxTtdSIWjsRMgsffvbOSjozk6WvpaiELJhmfv7u
        Sho+PP7eCjrTTKzBllMu4tZOhMzChyffH6QzzSxtLUUVZIGE+dXeARo+PLVvgM6EibXYsspBknc7T3+w
        jIYPv/5wCZ0Js3S1FBWQBdGKCJmFDy/tX0xnWhFrsuUVm6Tvdn5zYDENH145uIjOtGJpamnU2hkUIbPw
        4fUj/XSmVQtfS1H52MajODbST8OHN0f66EwUsUZbbrFI693O8aN9NHz4/RcL6UwUC1tLUfXYhqOKkFn4
        8IfjC+hMVLFWW3YxSFI7g/745XwaPvzpxIt0JqqFq6WoeGyjcUTILHz486nn6UwcsWZbfmeTtHYG/eV0
        Lw0f4hibiWNhamnS2hn07pl5NHz4++hzdCauHV9LUenYxpKIkFn48I+Lc+lMErEH205nkVbtDHr/8hwa
        Pnzw7Ww6k8SOraWocmxDSUXILHz499UeOpNU7MW21RmkWTuDPrnWQ8OHT677+gV0WC1FhWMbScN/xp6h
        4UMXFJ1JQ+zJtpdv0q6dTBb+zo1D9Ny07JhamnbtzJO5r6WobGzhRRJ7tO3mC1+1M2/mtpaiqrEFF1Hs
        1badD3zWzpn87Wzv1CdgNz7pr907N4+e48vc1VJUNLZQH/7rauix3S81tCA8hmNsxofYs22/vWRRO+s9
        O7y0IfxpcYzN+DA3tTTr2rnn9fU0fIhjbMaXba+lqGRsYT7dtWmIhg9xjM34FBlYHNnSrtq5f9saGj48
        4I6xGZ+2rZaiirEF+fb2yRdqO15rfBXgsV/PZNuGpkUWFks2tKN21ovPfvGPGm9ufqX2lhM/30nx8+Co
        Zl5LUcHYQsosMrF4/JJ17ewUM6ul7uV2ni1ATjlqMfnD3eRx4KbSdE/ORxaTP9xLreFrg+X/ZvML0J+g
        GUU2FpM/quOVQb0KGsWzP7MvD3eVa/rr4x+yxZRJy2AUT0yLRwghhBBCCCGEEEIIIYQQoo6urv8AzUYh
        PsH+Re4AAAAASUVORK5CYII=
</value>
  </data>
</root>